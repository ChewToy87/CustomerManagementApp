@model CustomerManagementClient.Models.CustomerViewModel
@using Microsoft.AspNetCore.Mvc.ModelBinding

@{
    var index = Model.Id.ToString();
}

<tr id="customerRow-@Model.Id" class="@(Model.IsAdded ?  "table-success" : Model.IsEdited ? "table-warning" : "")">
    <td class="align-middle text-center">@Model.Id</td>
    <td class="align-middle">
        <input asp-for="FirstName" name="Customers[@(index)].FirstName"
               class="form-control form-control-sm @(ViewData.ModelState[$"Customers[{index}].FirstName"]?.Errors.Count > 0 ? "is-invalid" : "")"
               placeholder="First Name" />
        <div class="invalid-feedback">
            @Html.ValidationMessage($"Customers[{index}].FirstName")
        </div>
    </td>
    <td class="align-middle">
        <input asp-for="Surname" name="Customers[@(index)].Surname"
               class="form-control form-control-sm @(ViewData.ModelState[$"Customers[{index}].Surname"]?.Errors.Count > 0 ? "is-invalid" : "")"
               placeholder="Surname" />
        <div class="invalid-feedback">
            @Html.ValidationMessage($"Customers[{index}].Surname")
        </div>
    </td>
    <td class="align-middle">
        <input asp-for="Email" name="Customers[@(index)].Email"
               class="form-control form-control-sm @(ViewData.ModelState[$"Customers[{index}].Email"]?.Errors.Count > 0 ? "is-invalid" : "")"
               placeholder="Email" />
        <div class="invalid-feedback">
            @Html.ValidationMessage($"Customers[{index}].Email")
        </div>
    </td>
    <td class="align-middle">
        <input asp-for="PhoneNumber" name="Customers[@(index)].PhoneNumber"
               class="form-control form-control-sm @(ViewData.ModelState[$"Customers[{index}].PhoneNumber"]?.Errors.Count > 0 ? "is-invalid" : "")"
               placeholder="Phone Number" />
        <div class="invalid-feedback">
            @Html.ValidationMessage($"Customers[{index}].PhoneNumber")
        </div>
    </td>
    <td class="align-middle">
        <div class="d-flex flex-wrap gap-2">
            <button class="btn btn-success btn-sm"
                    hx-post="@Url.Page("/Index", pageHandler: "SaveCustomer", values: new { customerId = Model.Id })"
                    hx-include="#customerRow-@Model.Id"
                    hx-target="#customerRow-@Model.Id"
                    hx-swap="outerHTML"
                    aria-label="Save Customer">
                <i class="fa fa-save"></i>
            </button>
            <button class="btn btn-secondary btn-sm"
                    hx-post="@Url.Page("/Index", pageHandler: "CancelEdit", values: new { customerId = Model.Id })"
                    hx-target="#customerRow-@Model.Id"
                    hx-swap="outerHTML"
                    aria-label="Cancel Edit">
                <i class="fa fa-times"></i>
            </button>
        </div>
    </td>
</tr>
